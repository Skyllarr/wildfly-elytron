<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">

    <channel>
        <title>WildFly Elytron</title>
        <link>https://wildfly-security.github.io/wildfly-elytron</link>
        <description>WildFly Elytron: Security, Authentication, and Authorization SPIs for the WildFly project</description>
        <lastBuildDate>Mon, 15 Mar 2021 15:52:17 +0000</lastBuildDate>
        
        <item>
            <title>Upcoming SSLContext that supports delegation to alternate instances based on peer information</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/sslcontext-delegation-to-alternate-instances-based-on-peer/
            </link>
            <description>
                One of the features we have been working on for the Elytron subsytem is the ability to configure SSL context that will delegate to different instances of SSL context based on the host and port of the peer. Background In some cases it can be useful to have SSL context...
            </description>
            <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/sslcontext-delegation-to-alternate-instances-based-on-peer/
            </guid>
        </item>
        
        <item>
            <title>Upcoming automatic registration of client side / JVM wide default SSLContext</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/automatic-registration-of-client-side-jvm-wide-default-sslcontext/
            </link>
            <description>
                One of the features we have been working on for the Elytron subsytem is the ability to automatically register client side JVM wide default SSL context. This SSL context will be available to any library that supports the use of the default context. Details We plan to provide implementation of...
            </description>
            <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/automatic-registration-of-client-side-jvm-wide-default-sslcontext/
            </guid>
        </item>
        
        <item>
            <title>Planned Security Features for WildFly</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/planned-security-features-for-wildfly-23/
            </link>
            <description>
                Since the feature development phase for WildFly 23 has now started, we wanted to highlight the security features that we will be working on. As usual, please keep in mind that this blog post is a summary of our general plans and not a guarantee that each of these features...
            </description>
            <pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/planned-security-features-for-wildfly-23/
            </guid>
        </item>
        
        <item>
            <title>Automatic Self-Signed Certificate Generation with Elytron</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/auto-self-signed-certificate-generation/
            </link>
            <description>
                WildFly 22 adds the ability to automatically generate a self-signed certificate the first time WildFly receives an HTTPS request when WildFly is being secured using Elytron. This is useful for development or testing environments. This blog post gives an introduction to this new feature. Default SSL context Making use of...
            </description>
            <pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/auto-self-signed-certificate-generation/
            </guid>
        </item>
        
        <item>
            <title>Using case principal transformers in Elytron</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/case-principal-transformer/
            </link>
            <description>
                The case-principal-transformer quickstart demonstrates how to use a case-principal-transformer to adjust a principal to upper case when securing EJBs. Note, the quickstart is building from this post which more closely explains how to configure filesystem realms and SASL authentication to secure EJBs. An Overview of the Case Principal Transformer Principal...
            </description>
            <pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/case-principal-transformer/
            </guid>
        </item>
        
        <item>
            <title>TLS 1.3 support for WildFly with OpenSSL</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/tls-13-with-wildfly-openssl/
            </link>
            <description>
                WildFly 21 adds the ability to use TLS 1.3 with WildFly when using the OpenSSL TLS provider. This blog post will give an introduction to this new feature. Disabled by Default The use of TLS 1.3 is currently disabled by default when using the OpenSSL TLS provider. This is because...
            </description>
            <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/tls-13-with-wildfly-openssl/
            </guid>
        </item>
        
        <item>
            <title>SSH Authentication with Git Persistence</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/ssh-auth-for-git-persistence/
            </link>
            <description>
                When using a standalone WildFly server, it is currently possible to manage your configuration file history using a git repository. While previously it was only possible to connect to HTTP git servers, it is now possible to establish a connection with SSH servers as well. In order to connect to...
            </description>
            <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/ssh-auth-for-git-persistence/
            </guid>
        </item>
        
        <item>
            <title>RESTEasy client integration with WildFly Elytron client</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/resteasy-elytron-client-integration/
            </link>
            <description>
                We have added a new functionality to the RESTEasy client that allows it to use authentication configuration from WildFly Elytron client. It is now possible to configure bearer token, SSL context and credentials in Elytron client that RESTEasy client will automatically use when making requests. Elytron client configuration No new...
            </description>
            <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/resteasy-elytron-client-integration/
            </guid>
        </item>
        
        <item>
            <title>New Security Features in WildFly 21</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/new-security-features-in-wildfly-21/
            </link>
            <description>
                This blog post highlights the new security features that are in WildFly 21. Security Realm Enhancements If a security realm becomes unavailable for some reason, it is now possible to fail over to an alternate security realm. WildFly 21 also adds support for distributed security realms, where identities can be...
            </description>
            <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/new-security-features-in-wildfly-21/
            </guid>
        </item>
        
        <item>
            <title>HTTP External Mechanism</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/http-external-mechanism/
            </link>
            <description>
                WildFly Elytron now supports authenticating users with the External HTTP mechanism. The External mechanism allows users to be authenticated with credentials established outside the server via the AJP protocol. This means if you have users authenticated by an Apache httpd server, these users can be forwarded to WildFly. This can...
            </description>
            <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/http-external-mechanism/
            </guid>
        </item>
        
    </channel>
</rss>
